{"version":3,"sources":["index.js"],"names":["App","props","state","unitPerRoller","nbRollers","items","description","unitPerTime","nbTimes","nbDays","handleUnitPerRollerChange","bind","handleNbRollersChange","addItem","handleUnitPerTimeChange","handleNbTimesChange","handleNbDaysChange","handleDescriptionChange","event","value","target","this","setState","concat","index","slice","currentItem","listItems","length","map","item","Item","key","totalPerDay","forEach","Description","SelectToiletPaper","variant","onClick","sm","Label","Result","React","Component","className","alt","src","Row","InputNbRollers","handleChange","InputNbUnitByRoller","Control","type","onChange","InputDescription","InputUnitPerTimes","InputNbTimes","InputNbDays","Math","floor","toFixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6f036c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport './index.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            unitPerRoller: 180,\r\n            nbRollers: 6,\r\n            items: [{\r\n                description: \"\",\r\n                unitPerTime: 1,\r\n                nbTimes: 1,\r\n                nbDays: 1\r\n            }],\r\n        }\r\n\r\n        this.handleUnitPerRollerChange = this.handleUnitPerRollerChange.bind(this);\r\n        this.handleNbRollersChange = this.handleNbRollersChange.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.handleUnitPerTimeChange = this.handleUnitPerTimeChange.bind(this);\r\n        this.handleNbTimesChange = this.handleNbTimesChange.bind(this);\r\n        this.handleNbDaysChange = this.handleNbDaysChange.bind(this);\r\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    }\r\n\r\n    handleUnitPerRollerChange(event) {\r\n        const { value } = event.target;\r\n        this.setState((state) => ({\r\n            unitPerRoller: value,\r\n            nbRollers: state.nbRollers,\r\n            items: state.items,\r\n        }))\r\n    }\r\n\r\n    handleNbRollersChange(event) {\r\n        const { value } = event.target;\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: value,\r\n            items: state.items,\r\n        }))\r\n    }\r\n\r\n    addItem() {\r\n\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: state.nbRollers,\r\n            items: state.items.concat([{\r\n                description: \"\",\r\n                unitPerTime: 1,\r\n                nbTimes: 1,\r\n                nbDays: 1\r\n            }]),\r\n        }))\r\n    }\r\n\r\n    handleDescriptionChange(event, index) {\r\n\r\n        const { value } = event.target;\r\n        const items = this.state.items.slice();\r\n\r\n        let currentItem = items[index];\r\n        currentItem = {\r\n            description: value,\r\n            unitPerTime: currentItem.unitPerTime,\r\n            nbTimes: currentItem.nbTimes,\r\n            nbDays: currentItem.nbDays,\r\n        }\r\n        items[index] = currentItem;\r\n\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: state.nbRollers,\r\n            items: items\r\n        }))\r\n    }\r\n\r\n    handleUnitPerTimeChange(event, index) {\r\n\r\n        const { value } = event.target;\r\n        const items = this.state.items.slice();\r\n\r\n        let currentItem = items[index];\r\n        currentItem = {\r\n            description: currentItem.description,\r\n            unitPerTime: value,\r\n            nbDays: currentItem.nbDays,\r\n            nbTimes: currentItem.nbTimes,\r\n        }\r\n        items[index] = currentItem;\r\n\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: state.nbRollers,\r\n            items: items\r\n        }))\r\n    }\r\n\r\n    handleNbTimesChange(event, index) {\r\n\r\n        const { value } = event.target;\r\n        const items = this.state.items.slice();\r\n\r\n        let currentItem = items[index];\r\n        currentItem = {\r\n            description: currentItem.description,\r\n            unitPerTime: currentItem.unitPerTime,\r\n            nbTimes: value,\r\n            nbDays: currentItem.nbDays,\r\n        }\r\n        items[index] = currentItem;\r\n\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: state.nbRollers,\r\n            items: items\r\n        }))\r\n    }\r\n\r\n\r\n    handleNbDaysChange(event, index) {\r\n\r\n        const { value } = event.target;\r\n        const items = this.state.items.slice();\r\n\r\n        let currentItem = items[index];\r\n        currentItem = {\r\n            description: currentItem.description,\r\n            unitPerTime: currentItem.unitPerTime,\r\n            nbTimes: currentItem.nbTimes,\r\n            nbDays: value,\r\n        }\r\n        items[index] = currentItem;\r\n        this.setState((state) => ({\r\n            unitPerRoller: state.unitPerRoller,\r\n            nbRollers: state.nbRollers,\r\n            items: items\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        let listItems = null;\r\n\r\n        if (this.state.items.length) {\r\n\r\n            listItems = this.state.items.map((item, index) => {\r\n                return (\r\n                    <Item key={index}\r\n                        description={item.description}\r\n                        unitPerTime={item.unitPerTime}\r\n                        nbTimes={item.nbTimes}\r\n                        nbDays={item.nbDays}\r\n                        handleUnitPerTimeChange={(event) => this.handleUnitPerTimeChange(event, index)}\r\n                        handleNbTimesChange={(event) => this.handleNbTimesChange(event, index)}\r\n                        handleNbDaysChange={(event) => this.handleNbDaysChange(event, index)}\r\n                        handleDescriptionChange={(event) => this.handleDescriptionChange(event, index)}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n\r\n        let totalPerDay = 0;\r\n        this.state.items.forEach((item) => {\r\n            totalPerDay += item.unitPerTime * item.nbTimes / item.nbDays;\r\n        });\r\n\r\n        return (\r\n            <Container>\r\n                <Description />\r\n                <h4>How many toilet paper do you have ?</h4>\r\n                <SelectToiletPaper\r\n                    unitPerRoller={this.state.unitPerRoller}\r\n                    nbRollers={this.state.nbRollers}\r\n                    handleUnitPerRollerChange={this.handleUnitPerRollerChange}\r\n                    handleNbRollersChange={this.handleNbRollersChange} />\r\n\r\n                <h4>How you use it ?</h4>\r\n                <Button variant=\"primary\" onClick={this.addItem}>Add usage</Button>\r\n                <Row>\r\n                    <Col sm={3}>\r\n                        <Form.Label>Description (optional)</Form.Label>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <Form.Label>Sheets per usage</Form.Label>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                        <Form.Label>Frequency of usage</Form.Label>\r\n                    </Col>\r\n                </Row>\r\n                {listItems}\r\n                <Result\r\n                    totalPerDay={totalPerDay}\r\n                    unitPerRoller={this.state.unitPerRoller}\r\n                    nbRollers={this.state.nbRollers} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Description() {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Will you need more toilet paper ?</h2>\r\n            <p>Calculate how long the toilet paper you have will last </p>\r\n            <img className=\"fixImage\" alt=\"Toilet paper\" src=\"./toiletpaper512.png\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SelectToiletPaper(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Form.Row>\r\n                <InputNbRollers nbRollers={props.nbRollers} handleChange={props.handleNbRollersChange} />\r\n                <InputNbUnitByRoller unitPerRoller={props.unitPerRoller} handleChange={props.handleUnitPerRollerChange} />\r\n            </Form.Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputNbRollers(props) {\r\n    return (\r\n        <div>\r\n            <FormGroup>\r\n                <Form.Label>Number of rolls</Form.Label>\r\n                <Form.Control type=\"number\" value={props.nbRollers} onChange={props.handleChange} />\r\n            </FormGroup>\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction InputNbUnitByRoller(props) {\r\n    return (\r\n        <div>\r\n            <FormGroup>\r\n                <Form.Label>Sheets per roll</Form.Label>\r\n                <Form.Control type=\"number\" value={props.unitPerRoller} onChange={props.handleChange} />\r\n            </FormGroup>\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Form.Row>\r\n                <InputDescription description={props.description} handleChange={props.handleDescriptionChange} />\r\n                <InputUnitPerTimes unitPerTime={props.unitPerTime} handleChange={props.handleUnitPerTimeChange} />\r\n                <InputNbTimes nbTimes={props.nbTimes} handleChange={props.handleNbTimesChange} />\r\n                <InputNbDays nbDays={props.nbDays} handleChange={props.handleNbDaysChange} />\r\n            </Form.Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InputDescription(props) {\r\n    return (\r\n        <Col sm={3}>\r\n            <Form.Control value={props.description} onChange={props.handleChange} />\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction InputUnitPerTimes(props) {\r\n    return (\r\n        <Col sm={3}>\r\n            <Form.Control type=\"number\" value={props.unitPerTime} onChange={props.handleChange} />\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction InputNbTimes(props) {\r\n    return (\r\n        <Form.Row>\r\n            <Col sm={8}>\r\n                <Form.Control type=\"number\" value={props.nbTimes} onChange={props.handleChange} />\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Form.Label> times per </Form.Label>\r\n            </Col>\r\n        </Form.Row>\r\n    )\r\n}\r\n\r\nfunction InputNbDays(props) {\r\n    return (\r\n        <Form.Row>\r\n            <Col sm={8}>\r\n                <Form.Control type=\"number\" value={props.nbDays} onChange={props.handleChange} />\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Form.Label> days </Form.Label>\r\n            </Col>\r\n        </Form.Row>\r\n    )\r\n}\r\n\r\nfunction Result(props) {\r\n    const nbDays = Math.floor(props.nbRollers * props.unitPerRoller / props.totalPerDay).toFixed(0);\r\n    return (\r\n        <h4>Result : Enough for {nbDays} days</h4>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}